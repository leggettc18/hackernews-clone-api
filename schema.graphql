schema { 
    query: Query
#    mutation: Mutation
}

type Query {
    links(OR: [String!], AND: [String!]): [Link!]
    link(id: ID!): Link!
}

scalar Time

type Link {
    id: ID!
    createdAt: Time!
    description: String!
    url: String!
    postedBy: User!
    votes: [Vote!]
}

#type Mutation {
#    post(url: String!, description: String!): Link!
#    signup(email: String!, password: String!, name: String!): AuthPayload
#    login(email: String!, password: String!): AuthPayload
#    upVote(linkId: ID!): Vote!
#}

type AuthPayload {
    token: String
    user: User
}

type User {
    id: ID!
    email: String!
    name: String!
    links: [Link!]
    votes: [Vote!]
}

type Vote {
    id: ID!
    user: User!
    link: Link!
}